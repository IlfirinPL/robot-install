$StartDate = (GET-DATE)
$Env:PY_PYTHON = 3.7
Set-ExecutionPolicy Bypass -Scope Process -Force;

Write-Output "####### Setup Chocolatey #######"
if (-Not (Get-Command "choco" -ErrorAction SilentlyContinue) ) { 
    Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
}
choco --version 

Write-Output "####### Setup GIT #######"
if (-Not (Get-Command "git" -ErrorAction SilentlyContinue)) {
    choco install git -y 
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path", "User")
  
} 
git --version


Write-Output "####### Setup Install Python  #######"
choco install python --version=3.7.5 -y
$env:Path = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path", "User")

$SEL = Select-String -Path $env:HOMEDRIVE/.gitconfig -Pattern "proxy"
if ($SEL -ne $null) {
    Write-Output "####### Setup Git PROXY ####### ***SKIP***"
}
else {
    Write-Output "####### Setup Git PROXY #######"
    $defaultValue = $env:USERNAME
    $prompt = Read-Host "Press enter to accept to default login [$($defaultValue)]"
    $login = ($defaultValue, $prompt)[[bool]$prompt]

    $password = Read-Host "Enter password for CK $login" -AsSecureString
    $password = [Runtime.InteropServices.Marshal]::SecureStringToBSTR($password)
    $password = [Runtime.InteropServices.Marshal]::PtrToStringAuto($password)

    git config --global http.proxy ${login}:${password}@spplapp10200:8080
    git config --global http.sslVerify false 
}


$SEL = Select-String -Path $env:HOMEDRIVE/.gitconfig -Pattern "email"
if ($SEL -ne $null) {
    Write-Output "####### Setup Git EMAIL ####### ***SKIP***"
}
else {
    Write-Output "####### Setup Git EMAIL #######"
    if (Test-Path $env:APPDATA/email.ini) {
        $defaultValue = Get-Content -Path $env:APPDATA/email.ini
        $prompt = Read-Host "Press enter to accept default email adress [$($defaultValue)]"
        $email = ($defaultValue, $prompt)[[bool]$prompt]
        New-Item -Path $env:APPDATA -Name "email.ini" -ItemType "file" -Force -Value "$email" > $null
    }
    else {
        $email = Read-Host "Provided Company Email"
        New-Item -Path $env:APPDATA -Name "email.ini" -ItemType "file" -Force -Value "$email" > $null
    }
    

    git config --global user.email "${email}" 
}

if (Get-Command "npm" -ErrorAction SilentlyContinue) {
    $SEL = Select-String -Path $env:USERPROFILE/.npmrc -Pattern "https://artifactory.inspol.biz/api/npm/npm-virtual/"
    if ($SEL -ne $null) {
        Write-Output "####### Setup npm ####### ***SKIP***"
    }
    else {
        Write-Output "####### Setup npm #######"
        npm config set registry https://artifactory.inspol.biz/api/npm/npm-virtual/ 
        npm config set always-auth=true 
        npm config set strict-ssl=false 
    }
}



$SEL = Select-String -Path $env:APPDATA/pip/pip.ini -Pattern "https://artifactory.inspol.biz/api/pypi/pypi/simple"
if ($SEL -ne $null) {
    Write-Output "####### Setup PIP ####### ***SKIP***"
}
else {
    Write-Output "####### Setup PIP"
    New-Item -itemtype directory $env:APPDATA/pip -Force > $null
    New-Item -Path $env:APPDATA/pip -Name "pip.ini" -ItemType "file" -Force -Value "[global]`nindex-url = https://artifactory.inspol.biz/api/pypi/pypi/simple`n`nfind-links = https://artifactory.inspol.biz/api/pypi/pypi/simple`n`ntrusted-host = artifactory.inspol.biz`n               pypi.python.org`n               pypi.org`n               files.pythonhosted.org`n`n[install]`nfind-links = https://artifactory.inspol.biz/api/pypi/pypi/simple" > $null
}

Write-Output "####### Setup RobotFramework #######"
$f = "packages.txt"; Invoke-WebRequest -Uri https://raw.githubusercontent.com/IlfirinPL/robot-install/master/data/$f -OutFile $env:temp/$f 

if (Get-Command "py" -ErrorAction SilentlyContinue) { 
    py -m pip install -U pip wheel setuptools 
    py -m pip install -U -r $env:temp/$f 
    py -m robot --version 
    Write-Output "####### Type To start RIDE `npy -m robotide.__init__`n##################"
}
else {
    python -m pip install -U pip wheel setuptools
    python -m pip install -U -r $env:temp/$f
    python -m robot --version 
    Write-Output "####### Type To start RIDE `npython -m robotide.__init__`n##################"
}

Write-Output "### Installation time is: $(NEW-TIMESPAN -Start $StartDate -End (GET-DATE))"
