Write-Output "Host Name $env:computername $env:USERNAME"
Write-Output  "Is admin" ([Security.Principal.WindowsPrincipal] `
[Security.Principal.WindowsIdentity]::GetCurrent() `
).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

function reloadEnv () {
  $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
}



$Env:PY_PYTHON=3
Set-ExecutionPolicy Bypass -Scope Process -Force;

#$login = Read-Host "Enter CK (user login)" get user for shell
$login = $env:USERNAME
$password = Read-Host "Enter password for CK $login" -AsSecureString
$password = [Runtime.InteropServices.Marshal]::SecureStringToBSTR($password)
$password = [Runtime.InteropServices.Marshal]::PtrToStringAuto($password)
$email = Read-Host "Provided Company Email"


Write-Output "####### Setup Chocolatey #######"
if (-Not (Get-Command "choco" -ErrorAction SilentlyContinue) )
{ 
  Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
}
choco --version


if (-Not (Get-Command "git" -ErrorAction SilentlyContinue))
{
  choco install git 
  reloadEnv
  
} 
git --version


if (Get-Command "npm" -ErrorAction SilentlyContinue)
{
  Write-Output "####### Setup Git npm #######"
  npm config set registry https://artifactory.inspol.biz/api/npm/npm-virtual/ 
  npm config set always-auth=true 
  npm config set strict-ssl=false 

}



Write-Output "####### Setup Git #######"
git config --global http.proxy ${login}:${password}@spplapp10200:8080
git config --global user.email "${email}"
git config --global http.sslVerify false

Write-Output "####### Setup Install Python  #######"
choco install python --version=3.7.5 -y #workaround issue for https://github.com/robotframework/RIDE/issues/2039
choco install vscode -y
choco install microsoft-visual-cpp-build-tools -y
choco install dbeaver -y
choco install tortoisegit -y
choco install doublecmd -y
choco install imagemagick.tool -y
reloadEnv


Write-Output "####### Setup PIP"
New-Item -itemtype directory $env:APPDATA/pip -Force 
New-Item -Path $env:APPDATA/pip -Name "pip.ini" -ItemType "file" -Force -Value "[global]`nindex-url = https://artifactory.inspol.biz/api/pypi/pypi/simple`n`nfind-links = https://artifactory.inspol.biz/api/pypi/pypi/simple`n`ntrusted-host = artifactory.inspol.biz`n               pypi.python.org`n               pypi.org`n               files.pythonhosted.org`n`n[install]`nfind-links = https://artifactory.inspol.biz/api/pypi/pypi/simple"



Write-Output "####### Setup RobotFramework #######"
$f="packages.txt"; Invoke-WebRequest -Uri https://raw.githubusercontent.com/IlfirinPL/robot-install/master/data/$f -OutFile $env:temp/$f 

if (Get-Command "py" -ErrorAction SilentlyContinue) 
{ 
    py -m pip install -U pip wheel pywin32 setuptools
    py -m pip install -U -r $env:temp/$f
    py -m robot --version
    Write-Output "####### Type To start RIDE `npy -m robotide.__init__`n##################"
}
else {
    python -m pip install -U pip wheel pywin32 setuptools
    python -m pip install -U -r $env:temp/$f
    python -m robot --version
    Write-Output "####### Type To start RIDE `npython -m robotide.__init__`n##################"
}


